{"ast":null,"code":"var _jsxFileName = \"/Users/arwenkim/Desktop/gitstuff/Triolingo/frontend/src/util/route_util.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = ({\n  component: Component,\n  path,\n  loggedIn,\n  exact\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  path: path,\n  exact: exact,\n  render: props => !loggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/tweets\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 47\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Auth;\n\nconst Protected = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => loggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 48\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c2 = Protected;\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"Protected\");","map":{"version":3,"sources":["/Users/arwenkim/Desktop/gitstuff/Triolingo/frontend/src/util/route_util.js"],"names":["React","connect","Route","Redirect","withRouter","Auth","component","Component","path","loggedIn","exact","props","Protected","rest","mapStateToProps","state","session","isAuthenticated","AuthRoute","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA;AAAxC,CAAD,kBACX,QAAC,KAAD;AAAO,EAAA,IAAI,EAAEF,IAAb;AAAmB,EAAA,KAAK,EAAEE,KAA1B;AAAiC,EAAA,MAAM,EAAGC,KAAD,IACvC,CAACF,QAAD,gBAAa,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,UAAb,gBAA0C,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD5C;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMN,I;;AAMN,MAAMO,SAAS,GAAG,CAAC;AAAEN,EAAAA,SAAS,EAAEC,SAAb;AAAwBE,EAAAA,QAAxB;AAAkC,KAAGI;AAArC,CAAD,kBAChB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEF,KAAK,IAC1BF,QAAQ,gBAAI,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,UAAJ,gBAAiC,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD7C;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMC,S;;AAON,MAAME,eAAe,GAAGC,KAAK,KAC3B;AAACN,EAAAA,QAAQ,EAAEM,KAAK,CAACC,OAAN,CAAcC;AAAzB,CAD2B,CAA7B;;AAIA,OAAO,MAAMC,SAAS,GAAGd,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBT,IAAzB,CAAD,CAA5B;AAEP,OAAO,MAAMc,cAAc,GAAGf,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBF,SAAzB,CAAD,CAAjC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (<Component {...props} />) : (<Redirect to=\"/tweets\" />)\n    )} />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route {...rest} render={props =>\n      loggedIn ? (<Component {...props} />) : (<Redirect to=\"/login\" />)\n    } />\n);\n\n\nconst mapStateToProps = state => (\n  {loggedIn: state.session.isAuthenticated}\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));"]},"metadata":{},"sourceType":"module"}