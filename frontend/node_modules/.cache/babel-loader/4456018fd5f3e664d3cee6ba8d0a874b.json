{"ast":null,"code":"import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\nexport const REMOVE_SESSION_ERRORS = \"REMOVE_SESSION_ERRORS\";\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\nexport const removeErrors = () => ({\n  type: REMOVE_SESSION_ERRORS\n}); // thunk action creator\n\nexport const signup = user => dispatch => APIUtil.signup(user).then(() => dispatch(receiveUserSignIn()), err => dispatch(receiveErrors(err.response.data)));\nexport const login = user => dispatch => APIUtil.login(user).then(res => {\n  const {\n    token\n  } = res.data;\n  localStorage.setItem('jwtToken', token);\n  APIUtil.setAuthToken(token);\n  const decoded = jwt_decode(token);\n  dispatch(receiveCurrentUser(decoded));\n}).catch(err => {\n  dispatch(receiveErrors(err.response.data));\n});\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};","map":{"version":3,"sources":["/Users/arwenkim/Desktop/gitstuff/Triolingo/frontend/src/actions/session_actions.js"],"names":["APIUtil","jwt_decode","RECEIVE_CURRENT_USER","RECEIVE_SESSION_ERRORS","RECEIVE_USER_LOGOUT","RECEIVE_USER_SIGN_IN","REMOVE_SESSION_ERRORS","receiveCurrentUser","currentUser","type","receiveUserSignIn","receiveErrors","errors","logoutUser","removeErrors","signup","user","dispatch","then","err","response","data","login","res","token","localStorage","setItem","setAuthToken","decoded","catch","logout","removeItem"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,kBAAkB,GAAGC,WAAW,KAAK;AAC9CC,EAAAA,IAAI,EAAEP,oBADwC;AAE9CM,EAAAA;AAF8C,CAAL,CAAtC;AAKP,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACpCD,EAAAA,IAAI,EAAEJ;AAD8B,CAAP,CAA1B;AAIP,OAAO,MAAMM,aAAa,GAAGC,MAAM,KAAK;AACpCH,EAAAA,IAAI,EAAEN,sBAD8B;AAEpCS,EAAAA;AAFoC,CAAL,CAA5B;AAKP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC7BJ,EAAAA,IAAI,EAAEL;AADuB,CAAP,CAAnB;AAIP,OAAO,MAAMU,YAAY,GAAG,OAAO;AAC/BL,EAAAA,IAAI,EAAEH;AADyB,CAAP,CAArB,C,CAIP;;AAEA,OAAO,MAAMS,MAAM,GAAGC,IAAI,IAAIC,QAAQ,IAClCjB,OAAO,CAACe,MAAR,CAAeC,IAAf,EAAqBE,IAArB,CAA0B,MACtBD,QAAQ,CAACP,iBAAiB,EAAlB,CADZ,EAEGS,GAAG,IACFF,QAAQ,CAACN,aAAa,CAACQ,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAHZ,CADG;AAQP,OAAO,MAAMC,KAAK,GAAGN,IAAI,IAAIC,QAAQ,IACjCjB,OAAO,CAACsB,KAAR,CAAcN,IAAd,EAAoBE,IAApB,CAAyBK,GAAG,IAAI;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAG,CAACF,IAAtB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAxB,EAAAA,OAAO,CAAC2B,YAAR,CAAqBH,KAArB;AACA,QAAMI,OAAO,GAAG3B,UAAU,CAACuB,KAAD,CAA1B;AACAP,EAAAA,QAAQ,CAACV,kBAAkB,CAACqB,OAAD,CAAnB,CAAR;AACH,CAND,EAOCC,KAPD,CAOOV,GAAG,IAAI;AACVF,EAAAA,QAAQ,CAACN,aAAa,CAACQ,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAAR;AACH,CATD,CADG;AAcP,OAAO,MAAMS,MAAM,GAAG,MAAMb,QAAQ,IAAI;AACpCQ,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA/B,EAAAA,OAAO,CAAC2B,YAAR,CAAqB,KAArB;AACAV,EAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACH,CAJM","sourcesContent":["import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\nexport const REMOVE_SESSION_ERRORS = \"REMOVE_SESSION_ERRORS\"\n\nexport const receiveCurrentUser = currentUser => ({\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n    type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n    type: RECEIVE_SESSION_ERRORS,\n    errors\n})\n\nexport const logoutUser = () => ({\n    type: RECEIVE_USER_LOGOUT\n});\n\nexport const removeErrors = () => ({\n    type: REMOVE_SESSION_ERRORS\n})\n\n// thunk action creator\n\nexport const signup = user => dispatch => (\n    APIUtil.signup(user).then(() => (\n        dispatch(receiveUserSignIn())\n    ), err => (\n        dispatch(receiveErrors(err.response.data))\n    ))\n);\n\nexport const login = user => dispatch => (\n    APIUtil.login(user).then(res => {\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        APIUtil.setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(receiveCurrentUser(decoded))\n    })\n    .catch(err => {\n        dispatch(receiveErrors(err.response.data));\n    })\n)\n\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    APIUtil.setAuthToken(false)\n    dispatch(logoutUser())\n};"]},"metadata":{},"sourceType":"module"}